{"config":{"lang":["ja"],"separator":"[\\s\\-\uff0c\u3002]+","pipeline":["stemmer"]},"docs":[{"location":"","title":"Flask-RESTful Guide","text":"<ul> <li>1. \u7b80\u4ecb</li> <li>2. \u521d\u59cb\u5316\u9879\u76ee</li> <li>3. \u8fde\u63a5\u6570\u636e\u5e93</li> <li>4. \u89c4\u5212 &amp; \u5b9a\u4e49 &amp; \u521b\u5efa \u84dd\u56fe</li> <li>5. \u521b\u5efaORM\u6a21\u578b\u5e76\u66f4\u65b0\u6570\u636e\u5e93</li> <li>6. \u5b9e\u73b0\u6ce8\u518c\u63a5\u53e3</li> <li>7. \u5b9e\u73b0\u767b\u5f55\u63a5\u53e3</li> <li>8. \u5b9e\u73b0\u767b\u51fa\u63a5\u53e3</li> <li>9. \u5b9e\u73b0\u83b7\u53d6\u7528\u6237\u5217\u8868\u63a5\u53e3</li> <li>10. \u89e3\u51b3\u8de8\u57df\u95ee\u9898</li> <li>11. \u901a\u8fc7 Docker \u90e8\u7f72</li> <li>12. \u5176\u4ed6</li> <li>13. \u603b\u7ed3</li> </ul>"},{"location":"1.%20%E7%AE%80%E4%BB%8B/","title":"1. \u7b80\u4ecb","text":""},{"location":"1.%20%E7%AE%80%E4%BB%8B/#1","title":"1. \u7b80\u4ecb","text":"<p><code>Flask</code> \u662f Python \u793e\u533a\u4e2d\u5f00\u53d1 Web \u5e94\u7528\u6700\u706b\u70ed\u7684\u6846\u67b6\u4e4b\u4e00\uff0c\u4e0d\u540c\u4e8e <code>Django</code> \u9661\u5ced\u7684\u5b66\u4e60\u66f2\u7ebf\uff0c\u4e2a\u4eba\u611f\u89c9 Flask \u975e\u5e38\u597d\u4e0a\u624b\uff0c\u4e14\u793e\u533a\u751f\u6001\u4e30\u5bcc\uff0c\u6709\u5f88\u591a\u6210\u719f\u7684\u6269\u5c55\u53ef\u4ee5\u62ff\u6765\u76f4\u63a5\u5b89\u88c5\u4f7f\u7528\u3002 Flask \u6846\u67b6\u81ea\u8eab\u96c6\u6210\u4e86\u57fa\u4e8e <code>Jinja</code> \u7684\u6a21\u677f\u8bed\u8a00\uff0c\u4f7f\u5176\u53ef\u4ee5\u5b8c\u6210\u524d\u540e\u7aef\u7684\u6240\u6709\u5f00\u53d1\uff0c\u4f46\u73b0\u5728\u5927\u90e8\u5206\u7684 Web \u5e94\u7528\u90fd\u662f\u524d\u540e\u7aef\u5206\u79bb\uff0c\u6240\u4ee5\u672c\u6587\u5c06\u4f7f\u7528 <code>Flask RESTful</code> \u6269\u5c55\u5b9e\u73b0\u4e00\u4e2a\u7eaf\u540e\u7aef\u7684 API \u670d\u52a1\u3002 </p>"},{"location":"1.%20%E7%AE%80%E4%BB%8B/#_1","title":"\u4f60\u4f1a\u5b66\u5230\u4ec0\u4e48","text":"<p>\u901a\u8fc7\u672c\u6587\u53ef\u4ee5\u5b66\u4e60\u5230\u4ee5\u4e0b\u5185\u5bb9\uff1a</p> <ul> <li>\u4f7f\u7528 <code>Flask</code> + <code>Flask RESTful</code> \u642d\u5efa API \u5e94\u7528\u5e76\u4f7f\u7528 <code>Blueprint</code>(\u84dd\u56fe) \u7ba1\u7406 API\uff1b</li> <li>\u4f7f\u7528 <code>Flask-SQLAlchemy</code> \u6269\u5c55\u5b9e\u73b0 ORM \u64cd\u4f5c MySQL \u6570\u636e\u5e93\uff1b</li> <li>\u57fa\u4e8e<code>JWT</code> \u9a8c\u8bc1\u5b9e\u73b0\u6ce8\u518c\u3001\u767b\u5f55\u4ee5\u53ca\u767b\u51fa\u63a5\u53e3\uff1b</li> <li>\u5b9e\u73b0\u4e00\u4e2a\u6700\u57fa\u672c\u7684\u5217\u8868\u83b7\u53d6\u63a5\u53e3\uff1b</li> <li>\u89e3\u51b3\u8de8\u57df\u95ee\u9898\uff1b</li> <li>\u4f7f\u7528 Docker \u90e8\u7f72\u8be5\u5e94\u7528\u3002</li> </ul> <p>\u5728\u6b63\u5f0f\u5f00\u59cb\u4e4b\u524d\uff0c\u8bf7\u786e\u4fdd\u4f60\u5df2\u7ecf\u5b89\u88c5\u4e86 Python\uff0c\u5e76\u4e14\u5bf9 Python \u6709\u4e00\u5b9a\u4e86\u89e3\u3002</p>"},{"location":"1.%20%E7%AE%80%E4%BB%8B/#_2","title":"\u4f9d\u8d56\u6a21\u5757","text":"<ul> <li>Flask\uff1aFlask \u662f\u4e00\u4e2a\u8f7b\u91cf\u7ea7WSGI Web \u5e94\u7528\u7a0b\u5e8f\u6846\u67b6\u3002\u5b83\u65e8\u5728\u8ba9\u5165\u95e8\u53d8\u5f97\u5feb\u901f\u3001\u7b80\u5355\uff0c\u5e76\u4e14\u80fd\u591f\u6269\u5c55\u5230\u590d\u6742\u7684\u5e94\u7528\u7a0b\u5e8f\u3002\u5b83\u6700\u521d\u662fWerkzeug \u548cJinja\u7684\u7b80\u5355\u5305\u88c5\uff0c\u73b0\u5df2\u6210\u4e3a\u6700\u6d41\u884c\u7684 Python Web \u5e94\u7528\u7a0b\u5e8f\u6846\u67b6\u4e4b\u4e00\u3002</li> <li>Flask-RESTful\uff1a\u662fFlask\u7684\u6269\u5c55\uff0c\u5b83\u589e\u52a0\u4e86\u5bf9\u5feb\u901f\u6784\u5efaREST API\u7684\u652f\u6301\u3002</li> <li>python-dotenv\uff1a\u4ece <code>.env</code> \u6587\u4ef6\u4e2d\u8bfb\u53d6\u952e\u503c\u5bf9\uff0c\u5e76\u5c06\u5176\u8bbe\u7f6e\u4e3a\u73af\u5883\u53d8\u91cf\u3002</li> <li>Flask-SQLAlchemy\uff1a\u5bf9\u8c61\u5173\u7cfb\u6620\u5c04 (ORM) \u5e93\u3002</li> <li>Flask-Migrate\uff1a\u5904\u7406 Flask \u5e94\u7528\u7a0b\u5e8f\u7684 SQLAlchemy \u6570\u636e\u5e93\u8fc1\u79fb\u7684\u6269\u5c55\u3002\u6570\u636e\u5e93\u64cd\u4f5c\u53ef\u901a\u8fc7 Flask \u547d\u4ee4\u884c\u754c\u9762\u8fdb\u884c\u3002</li> <li>PyMySQL\uff1a\u4e00\u4e2a\u7eafPython\u5199\u7684MySQL\u5ba2\u6237\u7aef\u5e93\u3002</li> <li>flask-jwt-extended\uff1a\u5411 Flask \u6dfb\u52a0\u4e86\u5bf9\u4f7f\u7528 JSON Web Tokens (JWT) \u6765\u4fdd\u62a4\u8def\u7531\u7684\u652f\u6301\uff0c\u800c\u4e14\u8fd8\u5185\u7f6e\u4e86\u8bb8\u591a\u6709\u7528\u7684\uff08\u53ef\u9009\u7684\uff09\u529f\u80fd\uff0c\u4f7f\u4f7f\u7528JSON Web Tokens\u53d8\u5f97\u66f4\u5bb9\u6613\u3002</li> <li>flask-cors\uff1a\u7528\u4e8e\u5904\u7406\u8de8\u6e90\u8d44\u6e90\u5171\u4eab\uff08CORS\uff09\u7684Flask\u6269\u5c55\uff0c\u4f7f\u8de8\u6e90AJAX\u6210\u4e3a\u53ef\u80fd\u3002</li> </ul>"},{"location":"10.%20%E8%A7%A3%E5%86%B3%E8%B7%A8%E5%9F%9F%E9%97%AE%E9%A2%98/","title":"10. \u89e3\u51b3\u8de8\u57df\u95ee\u9898","text":""},{"location":"10.%20%E8%A7%A3%E5%86%B3%E8%B7%A8%E5%9F%9F%E9%97%AE%E9%A2%98/#10","title":"10. \u89e3\u51b3\u8de8\u57df\u95ee\u9898","text":"<p>\u73b0\u5728\u6211\u4eec\u5b8c\u6210\u4e86\u6240\u6709\u63a5\u53e3\u7684\u5f00\u53d1\uff0c\u5982\u679c\u9700\u8981\u5728\u6d4f\u89c8\u5668\u73af\u5883\u4e2d\u8fdb\u884c\u63a5\u53e3\u8c03\u7528\uff0c\u4f46\u524d\u540e\u7aef\u670d\u52a1\u53c8\u4e0d\u540c\u6e90\u7684\u60c5\u51b5\u4e0b\uff0c\u662f\u4f1a\u51fa\u73b0\u8de8\u57df\u95ee\u9898\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u5b89\u88c5 <code>Flask-CORS</code> \u6269\u5c55\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002</p> Bash<pre><code>$ poetry add flask-cors\n</code></pre> <p>\u5728 <code>/app/__init__.py</code> \u4e2d\u4f7f\u7528\u8be5\u6269\u5c55\uff1a</p> Python<pre><code># ...\nfrom flask_cors import CORS\n#...\ndef create_app(config_name):\n# ...\n# \u89e3\u51b3\u8de8\u57df\nCORS(app)\n# ...\n</code></pre> <p>\u81f3\u6b64\uff0c\u6211\u4eec\u901a\u8fc7\u6700\u7b80\u5355\u7684\u8bbe\u7f6e <code>Access-Control-Allow-Origin: *</code> \u54cd\u5e94\u5934\u6765\u63a7\u5236\u8d44\u6e90\u8de8\u57df\u5171\u4eab\u3002</p>"},{"location":"11.%20%E9%80%9A%E8%BF%87%20Docker%20%E9%83%A8%E7%BD%B2/","title":"11. \u901a\u8fc7 Docker \u90e8\u7f72","text":""},{"location":"11.%20%E9%80%9A%E8%BF%87%20Docker%20%E9%83%A8%E7%BD%B2/#11-docker","title":"11. \u901a\u8fc7 Docker \u90e8\u7f72","text":"<p>\u6700\u540e\u6211\u4eec\u4f7f\u7528 Docker \u5c06\u9879\u76ee\u90e8\u7f72\u5728\u670d\u52a1\u5668\u4e0a\uff0c\u6211\u8fd9\u91cc\u670d\u52a1\u5668\u7cfb\u7edf\u4f7f\u7528\u7684 Linux \u53d1\u884c\u7248\u662f Ubuntu 18.04\uff0c\u5728\u90e8\u7f72\u4e4b\u524d\u4f60\u9700\u8981\u81ea\u5df1\u5b89\u88c5\u597d MySQL \u6570\u636e\u5e93\u3002</p> <p>\u6211\u4eec\u5148\u5c06\u9879\u76ee\u6240\u4f9d\u8d56\u7684 Python \u5305\u5bfc\u51fa\uff0c\u5728\u9879\u76ee\u6839\u76ee\u5f55\u4e0b\u6267\u884c\uff1a</p> Bash<pre><code>$ poetry export -f requirements.txt --output requirements.txt\n</code></pre> <p>\u5728\u9879\u76ee\u6839\u76ee\u5f55\u4e0b\u65b0\u5efa <code>dockerfile</code> \u6587\u4ef6\uff0c\u5199\u5165\u4ee5\u4e0b\u5185\u5bb9\uff1a</p> Docker<pre><code>FROM python:3.9-alpine\nWORKDIR /flask_service\nEXPOSE 5000\nCOPY . .\nRUN pip install -r requirements.txt -i https://pypi.tuna.tsinghua.edu.cn/simple \\\n&amp;&amp; apk add tzdata \\\n&amp;&amp; cp /usr/share/zoneinfo/Asia/Shanghai /etc/localtime \\\n&amp;&amp; echo \"Asia/Shanghai\" &gt; /etc/timezone \\\n&amp;&amp; apk del tzdata\nENV FLASK_DEBUG=True \\\nFLASK_APP=run.py \\\nFLASK_RUN_HOST=0.0.0.0 \\\nFLASK_ENV=development \\\nSECRET_KEY=b'#q)\\\\x00\\xd6\\x9f&lt;iBQ\\xd7;,\\xe2E' \\\nJWT_SECRET_KEY=b'#q)\\\\x00\\xd6\\x9f&lt;iBQ\\xd7;,\\xe2E' \\\nMYSQL_USER_NAME=root \\\nMYSQL_USER_PASSWORD=root \\\nMYSQL_HOSTNAME=192.168.56.56 \\\nMYSQL_PORT=3306 \\\nMYSQL_DATABASE_NAME=my_db\nRUN flask db migrate\nRUN flask db upgrade\nCMD [\"flask\", \"run\"]\n</code></pre> <p>\u56e0\u4e3a\u6211\u4eec\u662f\u4f7f\u7528 Docker \u5bb9\u5668\u8fd0\u884c\u670d\u52a1\uff0c\u6240\u4ee5\u4f60\u8981\u786e\u4fdd\u4f60\u7684\u5bb9\u5668\u5185\u90e8\u53ef\u4ee5\u8fde\u63a5\u5230\u6570\u636e\u5e93\uff0c\u5426\u5219\u53ef\u80fd\u4f1a\u62a5\u9519\u3002</p> <p>\u914d\u7f6e<code>.dockerignore</code>\u6587\u4ef6</p> Text Only<pre><code>__pycache__/\n.venv/\nvenv/\n.idea/\n.mypy_cache/\n.DS_Store\n.AppleDouble\n.vscode/\n.git/\n.env\n.gitignore\n.python-version\napi.http\npoetry.lock\npyproject.toml\nREADME.md\n</code></pre> <p>\u7136\u540e\u6211\u4eec\u4f7f\u7528\u547d\u4ee4\u884c\u7ec8\u7aef\u8fdb\u5165\u9879\u76ee\u76ee\u5f55\uff0c\u6267\u884c\u6253\u5305\u547d\u4ee4\uff1a</p> Bash<pre><code>$ sudo docker build -t flask_service_image .\n</code></pre> <p>\u6253\u5305\u5b8c\u6210\u540e\u8fd0\u884c\u5bb9\u5668\uff1a</p> Bash<pre><code>$ sudo docker run -d --restart=always -p 5000:5000 flask_service_image\n</code></pre> <p>\u81f3\u6b64\uff0c\u6211\u4eec\u6574\u4e2a\u5f00\u53d1\u5230\u90e8\u7f72\u7684\u6d41\u7a0b\u5c31\u5b8c\u6210\u4e86\uff0c\u73b0\u5728\u53ef\u4ee5\u901a\u8fc7\u4f60\u670d\u52a1\u5668\u7684 <code>ip:5000/xxx</code> \u53bb\u8c03\u7528\u63a5\u53e3\u4e86\u3002</p>"},{"location":"12.%20%E5%85%B6%E4%BB%96/","title":"12. \u5176\u4ed6","text":""},{"location":"12.%20%E5%85%B6%E4%BB%96/#12","title":"12. \u5176\u4ed6","text":"<p>\u5982\u679c\u4f60\u4f7f\u7528 Git \u8fdb\u884c\u4ee3\u7801\u7248\u672c\u7ba1\u7406\uff0c\u90a3\u4e48\u6211\u5efa\u8bae\u5c06\u4ee5\u4e0b\u6587\u4ef6\u5ffd\u7565\uff1a</p> Text Only<pre><code>*.pyc\n.venv/\n.env\nmigrations/versions/*\n</code></pre> <p>\u8fd9\u91cc\u7279\u522b\u8bf4\u660e\u4e00\u4e0b <code>migrations/versions/*</code> \u8fd9\u4e2a\u5ffd\u7565\u8def\u5f84\u3002\u56e0\u4e3a\u6211\u4eec\u4f7f\u7528\u7684\u6570\u636e\u5e93\u8fc1\u79fb\u63d2\u4ef6\u662f\u901a\u8fc7\u7ef4\u62a4 <code>alembic_version</code> \u8868\u5185\u7684\u7248\u672c\u53f7\u6765\u8fdb\u884c\u7ba1\u7406\u7684\uff0c\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u90fd\u662f\u56e2\u961f\u534f\u540c\u5f00\u53d1\uff0c\u800c\u4e14\u672c\u5730\u6570\u636e\u5e93\u4e0e\u7ebf\u4e0a\u6570\u636e\u5e93\u4e00\u5b9a\u662f\u5206\u5f00\u7684\uff0c\u4f60\u548c\u4f60\u7684\u540c\u4e8b\u53c8\u662f\u5e76\u884c\u5f00\u53d1\uff0c\u6240\u4ee5\u80af\u5b9a\u4f1a\u5bfc\u81f4\u7248\u672c\u53f7\u51b2\u7a81\uff0cflask-migrate \u6269\u5c55\u867d\u7136\u4e5f\u63d0\u4f9b\u4e86\u89e3\u51b3\u51b2\u7a81\u7684 <code>merge</code> \u547d\u4ee4\uff0c\u4f46\u6211\u4eec\u53d1\u73b0\u4e0d\u592a\u597d\u7528\uff08\u53ef\u80fd\u662f\u6211\u4f7f\u7528\u65b9\u5f0f\u4e0d\u5bf9\uff0c\u6709\u7814\u7a76\u8fc7\u7684\u540c\u5b66\u53ef\u4ee5\u4ea4\u6d41\u4e00\u4e0b\uff09\u3002\u6240\u4ee5\u6700\u540e\u6211\u4eec\u91c7\u7528\u4e0d\u63d0\u4ea4\u7248\u672c\u53f7\u6587\u4ef6\u7684\u65b9\u5f0f\uff0c\u4fdd\u969c\u5728\u4e0a\u7ebf\u65f6\u4e0d\u4f1a\u5728\u6570\u636e\u5e93\u540c\u6b65\u4e0a\u82b1\u8d39\u592a\u591a\u65f6\u95f4\u89e3\u51b3\u51b2\u7a81\u3002</p>"},{"location":"13.%20%E6%80%BB%E7%BB%93/","title":"13. \u603b\u7ed3","text":"<ol> <li>\u603b\u7ed3</li> </ol> <p>\u81f3\u6b64\uff0c\u6211\u4eec\u5df2\u7ecf\u4f7f\u7528 Flask + Flask RESTful \u5feb\u901f\u642d\u5efa\u4e86\u4e00\u4e2a API \u670d\u52a1\uff0c\u501f\u52a9\u4e8e Flask \u793e\u533a\u4e30\u5bcc\u7684\u6269\u5c55\uff0c\u6211\u4eec\u5b9e\u73b0\u4e86 MySQL \u6570\u636e\u5e93\u8fde\u63a5\u3001\u6ce8\u518c\u767b\u5f55\u7b49\u57fa\u672c\u63a5\u53e3\u670d\u52a1\uff0c\u5e76\u4e14\u4f7f\u7528 Docker \u5c06\u9879\u76ee\u6210\u529f\u90e8\u7f72\u5728\u670d\u52a1\u5668\u4e0a\u3002</p>"},{"location":"2.%20%E5%88%9D%E5%A7%8B%E5%8C%96%E9%A1%B9%E7%9B%AE/","title":"2. \u521d\u59cb\u5316\u9879\u76ee","text":""},{"location":"2.%20%E5%88%9D%E5%A7%8B%E5%8C%96%E9%A1%B9%E7%9B%AE/#2","title":"2. \u521d\u59cb\u5316\u9879\u76ee","text":""},{"location":"2.%20%E5%88%9D%E5%A7%8B%E5%8C%96%E9%A1%B9%E7%9B%AE/#_1","title":"\u65b0\u5efa\u9879\u76ee &amp; \u521b\u5efa\u865a\u62df\u73af\u5883","text":"<p>\u9996\u5148\u6211\u4eec\u65b0\u5efa\u4e00\u4e2a\u7a7a\u6587\u4ef6\u5939\uff0c\u4f5c\u4e3a\u9879\u76ee\u7684\u6839\u76ee\u5f55\u3002\u8fdb\u5165\u5230\u9879\u76ee\u6839\u76ee\u5f55\u540e\u521b\u5efa\u4e00\u4e2a\u865a\u62df\u73af\u5883\uff1a</p> Bash<pre><code># \u521b\u5efa\u9879\u76ee\u76ee\u5f55\u5e76\u8fdb\u5165\n$ mkdir Flask-RESTful-SQLAlchemy-Migrate &amp;&amp; cd Flask-RESTful-SQLAlchemy-Migrate\n# \u4f7f\u7528pyenv\u8bbe\u7f6e\u9879\u76ee\u4f7f\u7528\u7684Python\u7248\u672c\n$ pyenv local 3.9.17\n# \u4f7f\u7528poetry\u521d\u59cb\u5316pyproject.toml\u6587\u4ef6\n$ poetry init\n# \u6fc0\u6d3b\u865a\u62df\u73af\u5883\n$ poetry shell\n</code></pre>"},{"location":"2.%20%E5%88%9D%E5%A7%8B%E5%8C%96%E9%A1%B9%E7%9B%AE/#_2","title":"\u5b89\u88c5\u6a21\u5757","text":"<p>\u5b89\u88c5 <code>Flask</code>\u3001<code>Flask RESTful</code> \u4ee5\u53ca <code>python-dotenv</code>\uff0c\u6700\u540e\u4e00\u4e2a\u5305\u7528\u6765\u83b7\u53d6\u6211\u4eec\u5728\u9879\u76ee\u4e2d\u5b9a\u4e49\u7684\u73af\u5883\u53d8\u91cf\u3002</p> Bash<pre><code>$ poetry add Flask flask-restful python-dotenv\n</code></pre> <p>\u6ce8\u610f\uff1a</p> <ul> <li>\u5982\u679c\u8be5<code>flask run</code>\u547d\u4ee4\u68c0\u6d4b\u5230 <code>dotenv</code> \u6587\u4ef6\uff08\u5373<code>.env</code>\u6587\u4ef6\uff09\u4f46\u672a\u5b89\u88c5 <code>python-dotenv</code>\u6a21\u5757\uff0c\u5219\u4f1a\u663e\u793a\u4e00\u6761\u6d88\u606f\u3002</li> </ul> Bash<pre><code>$ flask run\n * Tip: There are .env files present. Do \"pip install python-dotenv\" to use them.\n</code></pre> <ul> <li>\u5373\u4f7f\u5b89\u88c5\u4e86 python-dotenv\uff0c\u4f60\u4e5f\u53ef\u4ee5\u901a\u8fc7\u8bbe\u7f6e<code>FLASK_SKIP_DOTENV</code>\u73af\u5883\u53d8\u91cf\u6765\u544a\u8bc9 Flask \u4e0d\u8981\u52a0\u8f7d dotenv \u6587\u4ef6\u3002</li> </ul> Bash<pre><code>$ export FLASK_SKIP_DOTENV=1\n$ flask run\n</code></pre>"},{"location":"2.%20%E5%88%9D%E5%A7%8B%E5%8C%96%E9%A1%B9%E7%9B%AE/#_3","title":"\u7b80\u5355\u63a5\u53e3\u7684\u5b9e\u73b0","text":"<p>\u6309\u7167\u60ef\u4f8b\uff0c\u6211\u4eec\u5148\u7b80\u5355\u5b9e\u73b0\u4e00\u4e2a\u63a5\u53e3\uff0c\u9a8c\u8bc1\u4e0b\u6211\u4eec\u6700\u57fa\u7840\u7684\u5305\u662f\u5426\u5b89\u88c5\u5b8c\u6210\u3002 \u9996\u5148\u5728\u9879\u76ee\u6839\u76ee\u5f55\u4e0b\u65b0\u5efa\u4e00\u4e2a <code>app</code> \u6587\u4ef6\u5939\uff0c\u5728 <code>app</code> \u4e0b\u65b0\u5efa\u4e00\u4e2a <code>__init__.py</code> \u6587\u4ef6\uff0c\u5728\u8fd9\u4e2a\u6587\u4ef6\u4e2d\uff0c\u6211\u4eec\u5b9a\u4e49\u4e00\u4e2a\u6d4b\u8bd5\u7528\u7684\u63a5\u53e3\u3002</p> Python<pre><code>from flask import Flask\nfrom flask_restful import Resource, Api\n# \u521d\u59cb\u5316\u4e00\u4e2a Flask \u5e94\u7528\u5b9e\u4f8b\napp = Flask(__name__)\n# \u521d\u59cb\u5316\u4e00\u4e2a flask_restful \u5b9e\u4f8b\napi = Api(app)\n# \u7ee7\u627f\u81ea\u62bd\u8c61\u7684RESTful\u8d44\u6e90\u7c7b\nclass HelloWorld(Resource):\ndef get(self):\nreturn {'hello': 'world'}\n# \u6ce8\u518c\u8def\u7531\napi.add_resource(HelloWorld, '/')\n</code></pre> <p>\u6211\u4eec\u5148\u5f15\u5165\u4e86 <code>Flask</code> \u548c <code>flask_restful</code> \u4e2d\u7684 <code>Resource</code> \u548c <code>Api</code>\uff0c\u7136\u540e\u6211\u4eec\u4f7f\u7528 <code>Flask()</code> \u521d\u59cb\u5316\u4e00\u4e2a Flask \u5e94\u7528\u5b9e\u4f8b\u8d4b\u503c\u7ed9 <code>app</code>\uff0c\u4f20\u5165\u7684 <code>__name__</code> \u5219\u662f\u6a21\u5757\u540d <code>\"app\"</code>\uff0c\u7136\u540e\u518d\u4f7f\u7528 <code>Api(app)</code> \u521d\u59cb\u5316\u4e00\u4e2a flask_restful \u5b9e\u4f8b\u8d4b\u503c\u7ed9 <code>api</code>\u3002 \u63a5\u4e0b\u6765\u6211\u4eec\u5b9a\u4e49\u4e86 <code>HelloWorld</code> \u8fd9\u4e2a\u7c7b\uff0c\u5b83\u7ee7\u627f\u4e8e <code>Resource</code> \u7c7b\u3002\u8fd9\u4e2a\u7c7b\u4e2d\u5b9a\u4e49\u4e00\u4e2a\u540d\u4e3a <code>get</code> \u7684\u51fd\u6570\uff0c\u5b83\u8fd4\u56de\u4e00\u4e2a\u56fa\u5b9a\u7684 JSON \u4e3a<code>{'hello': 'world'}</code>\u3002</p> <p>\u6700\u540e\u6211\u4eec\u4f7f\u7528 <code>api.add_resource(HelloWorld, '/')</code> \u53bb\u6ce8\u518c\u63a5\u53e3\uff0c\u5e76\u6307\u5b9a\u4e86\u8bbf\u95ee\u8def\u7531\uff0c\u5f53\u8bbf\u95ee\u7684\u63a5\u53e3\u8def\u5f84\u4e3a <code>\"/\"</code> \u4e14\u8bf7\u6c42\u65b9\u5f0f\u4e3a <code>GET</code> \u65f6\uff0c\u5c31\u4f1a\u8c03\u7528\u8be5\u7c7b\u4e2d\u5b9a\u4e49\u597d\u7684 <code>get()</code> \u51fd\u6570\u5904\u7406\u3002 \u4f60\u53ef\u80fd\u5df2\u7ecf\u731c\u5230\u4e86\uff0c\u5728\u4ee5 <code>Resource</code> \u7c7b\u4e3a\u57fa\u7c7b\u7684\u6d3e\u751f\u7c7b\u4e2d\uff0c\u5c31\u662f\u6211\u4eec\u5b9a\u4e49\u4e0d\u540c HTTP \u8bf7\u6c42\u65b9\u5f0f\u7684\u5730\u65b9\uff0c\u6240\u4ee5\u5728\u8fd9\u4e2a\u7c7b\u4e2d\uff0c\u4f60\u8fd8\u53ef\u4ee5\u5b9a\u4e49 <code>post</code>\uff0c<code>put</code>\uff0c<code>delete</code> \u7b49\u51fd\u6570\u3002 \u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u5728\u9879\u76ee\u6839\u76ee\u5f55\u4e2d\u65b0\u5efa\u4e00\u4e2a <code>run.py</code> \u6587\u4ef6\uff1a</p> Python<pre><code>from app import app\nif __name__ == '__main__':\napp.run(host=\"0.0.0.0\", port=5000, debug=True)\n</code></pre> <p>\u8fd9\u662f\u4e00\u4e2a\u542f\u52a8\u6587\u4ef6\uff0c\u4f60\u53ef\u4ee5\u76f4\u63a5\u5728\u63a7\u5236\u53f0\u4e2d\u4f7f\u7528 <code>python run.py</code> \u6267\u884c\uff0c\u6216\u662f\u548c\u6211\u4e00\u6837\uff0c\u5728\u9879\u76ee\u6839\u76ee\u5f55\u4e0b\u65b0\u5efa\u4e00\u4e2a <code>.env</code> \u6587\u4ef6\u7528\u6765\u5b58\u653e\u73af\u5883\u53d8\u91cf\uff1a</p> Python<pre><code>FLASK_ENV=development   # \u5f53\u524d\u73af\u5883\nFLASK_DEBUG=True                # \u5f00\u542f debug mode\nFLASK_APP=run.py                # flask\u9879\u76ee\u5165\u53e3\u6587\u4ef6\n</code></pre> <p>\u4e0a\u9762\u8fd9\u4e9b\u73af\u5883\u53d8\u91cf\u7684\u547d\u540d\u65b9\u5f0f\u90fd\u662f Flask \u89c4\u5b9a\u7684\uff0c\u8fd9\u6837\u6307\u5b9a\u73af\u5883\u53d8\u91cf\u7684\u597d\u5904\u5c31\u662f\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u63a7\u5236\u53f0\u6267\u884c <code>flask run</code> \u547d\u4ee4\u6765\u542f\u52a8\u670d\u52a1\u3002 \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5982\u679c\u4f60\u901a\u8fc7 <code>flask run</code> \u547d\u4ee4\u6765\u542f\u52a8\u670d\u52a1\uff0c\u90a3\u4e48 Flask \u7684\u914d\u7f6e\u4f1a\u9ed8\u8ba4\u4ee5\u73af\u5883\u53d8\u91cf\u4e3a\u51c6\uff0c\u5e76\u4e14\u4f1a\u5ffd\u7565 <code>run.py</code> \u4e2d\u7684\u914d\u7f6e\u9879\u3002 \u73b0\u5728\u6211\u4eec\u542f\u52a8\u9879\u76ee\u540e\uff0c\u770b\u5230\u4ee5\u4e0b\u4fe1\u606f\u5c31\u8bf4\u660e\u670d\u52a1\u542f\u52a8\u6210\u529f\u4e86\u3002</p> Bash<pre><code># \u8fd0\u884c\u5f00\u53d1\u670d\u52a1\u5668\n$ flask run\n</code></pre> <ul> <li>Serving Flask app 'run.py'</li> <li>Debug mode: on</li> <li>Running on http://127.0.0.1:5000 Press CTRL+C to quit</li> <li>Restarting with stat</li> <li>Debugger is active!</li> <li>Debugger PIN: xxx-xxx-xxx</li> </ul> <p>\u73b0\u5728\u4f60\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u6d4f\u89c8\u5668\u8bbf\u95ee <code>http://127.0.0.1:5000/</code> \u6216\u4f7f\u7528 Apifox \u7b49\u63a5\u53e3\u8c03\u8bd5\u5de5\u5177\u6765\u8fdb\u884c\u6d4b\u8bd5\uff0c\u770b\u770b\u662f\u5426\u4f1a\u5f97\u5230\u8fd4\u56de\u7684 <code>{'hello': 'world'}</code> JSON \u5b57\u7b26\u4e32\u3002</p>"},{"location":"3.%20%E8%BF%9E%E6%8E%A5%E6%95%B0%E6%8D%AE%E5%BA%93/","title":"3. \u8fde\u63a5\u6570\u636e\u5e93","text":""},{"location":"3.%20%E8%BF%9E%E6%8E%A5%E6%95%B0%E6%8D%AE%E5%BA%93/#3","title":"3. \u8fde\u63a5\u6570\u636e\u5e93","text":""},{"location":"3.%20%E8%BF%9E%E6%8E%A5%E6%95%B0%E6%8D%AE%E5%BA%93/#dockermysql","title":"\u4f7f\u7528docker\u521b\u5efaMySQL","text":"Bash<pre><code># \u521b\u5efa/data\u76ee\u5f55\u4ee5\u4fbf\u628amysql\u5bb9\u5668\u7684\u6570\u636e\u6620\u5c04\u5230\u5bbf\u4e3b\u673a\n$ mkdir /data\n\n# \u4ecedockerHub\u4e0a\u62c9\u53d6\u5b98\u65b9 Mysql 5.7 \u955c\u50cf\u5e76\u542f\u52a8\u4e3a\u5bb9\u5668\n$ docker run -d -it -v /data/mysql:/var/lib/mysql --name mysql -p 3306:3306 -e MYSQL_ROOT_PASSWORD=root -e MYSQL_DATABASE=my_db mysql:5.7 --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci\n</code></pre>"},{"location":"3.%20%E8%BF%9E%E6%8E%A5%E6%95%B0%E6%8D%AE%E5%BA%93/#_1","title":"\u5b89\u88c5\u6a21\u5757","text":"<p>\u8981\u8fde\u63a5\u6570\u636e\u5e93\uff0c\u9700\u8981\u5148\u5b89\u88c5 <code>Flask-SQLAlchemy</code> \u3001<code>Flask-Migrate</code> \u548c <code>PyMySQL</code> \u8fd9\u4e09\u4e2a\u6269\u5c55\u5305\uff0cFlask-SQLAlchemy \u7528\u6765\u8fde\u63a5\u5e76\u64cd\u4f5c\u6570\u636e\u5e93\uff0cFlask-Migrate \u662f\u4e00\u4e2a\u6570\u636e\u5e93\u8fc1\u79fb\u63d2\u4ef6\uff0c\u7528\u6765\u540c\u6b65\u6570\u636e\u5e93\u7684\u66f4\u6539\u3002\u6700\u540e\u56e0\u4e3a\u6211\u4eec\u8981\u8fde\u63a5\u7684\u662f MySQL \u6570\u636e\u5e93\uff0c\u6240\u4ee5\u9700\u8981\u5b89\u88c5\u4e00\u4e2a pymysql \u5305\u3002</p> Bash<pre><code>$ poetry add Flask-SQLAlchemy Flask-Migrate PyMySQL\n</code></pre>"},{"location":"3.%20%E8%BF%9E%E6%8E%A5%E6%95%B0%E6%8D%AE%E5%BA%93/#_2","title":"\u5b8c\u5584\u9879\u76ee\u76ee\u5f55\u7ed3\u6784","text":"<p>\u63a5\u4e0b\u6765\u6211\u4eec\u4fee\u6539\u4e00\u4e0b\u6211\u4eec\u9879\u76ee\u7684\u76ee\u5f55\u7ed3\u6784\uff0c\u8ba9\u6211\u4eec\u9879\u76ee\u7684\u53ef\u6269\u5c55\u6027\u66f4\u5f3a\u3002</p> Bash<pre><code>\u251c\u2500\u2500 .python-version             # pyenv\u8bbe\u7f6e\u9879\u76ee\u4f7f\u7528\u7684Python\u7248\u672c\n\u251c\u2500\u2500 .venv/                              # poetry\u521b\u5efa\u7684\u865a\u62df\u73af\u5883\n\u251c\u2500\u2500 app/\n\u2502   \u2514\u2500\u2500 api/                            # api \u63a5\u53e3\u6a21\u5757\n\u2502       \u2514\u2500\u2500 __init__.py     # \u6ce8\u518c\u4ee5\u53ca\u751f\u6210\u84dd\u56fe\n\u2502       \u2514\u2500\u2500 common/             # \u516c\u5171\u65b9\u6cd5\n\u2502       \u2514\u2500\u2500 models/             # \u6a21\u578b\n\u2502       \u2514\u2500\u2500 resources/      # \u63a5\u53e3\n\u2502       \u2514\u2500\u2500 schema/             # \u6821\u9a8c\n\u2502   \u2514\u2500\u2500 __init__.py             # \u6574\u4e2a\u5e94\u7528\u7684\u521d\u59cb\u5316\n\u2502   \u2514\u2500\u2500 config.py               # \u914d\u7f6e\u9879\n\u2502   \u2514\u2500\u2500 manage.py               # \u6570\u636e\u5e93\u8fc1\u79fb\u5de5\u5177\u7ba1\u7406\n\u251c\u2500\u2500 .env                                    # \u73af\u5883\u53d8\u91cf\n\u2514\u2500\u2500 run.py                              # \u5165\u53e3\u6587\u4ef6\n</code></pre> <p>\u8fd9\u6837\u4fee\u6539\u6211\u4eec\u7684\u9879\u76ee\u7ed3\u6784\uff0c\u53ef\u4ee5\u8ba9\u6211\u4eec\u914d\u5408 Flask \u63d0\u4f9b\u7684 Blueprint \uff08\u84dd\u56fe\uff09 \u5bf9\u63a5\u53e3\u8fdb\u884c\u6a21\u5757\u5316\u7ba1\u7406\u548c\u5f00\u53d1\uff0c\u6709\u52a9\u4e8e\u63d0\u9ad8\u6211\u4eec\u9879\u76ee\u7684\u53ef\u6269\u5c55\u6027\u548c\u53ef\u7ef4\u62a4\u6027\u3002 </p>"},{"location":"3.%20%E8%BF%9E%E6%8E%A5%E6%95%B0%E6%8D%AE%E5%BA%93/#_3","title":"\u914d\u7f6e\u6570\u636e\u5e93\u8fde\u63a5","text":"<p>\u63a5\u4e0b\u6765\u6211\u4eec\u5148\u914d\u7f6e\u6570\u636e\u5e93\u8fde\u63a5\uff0c\u9996\u5148\u4f60\u8981\u786e\u4fdd\u4f60\u6709\u53ef\u7528\u7684 MySQL \u6570\u636e\u5e93\uff0c\u7136\u540e\u5728 <code>/app/config.py</code> \u4e2d\u6dfb\u52a0\u5982\u4e0b\u4ee3\u7801\uff1a</p> Python<pre><code>import os\n# \u6570\u636e\u5e93\u76f8\u5173\u914d\u7f6e\n# \u5efa\u8bae\u5728\u672c\u5730\u6839\u76ee\u5f55\u4e0b\u65b0\u5efa .env \u6587\u4ef6\u7ef4\u62a4\u654f\u611f\u4fe1\u606f\u914d\u7f6e\u9879\u66f4\u5b89\u5168 \n# \u7528\u6237\u540d\nUSERNAME = os.getenv('MYSQL_USER_NAME')\n# \u5bc6\u7801\nPASSWORD = os.getenv('MYSQL_USER_PASSWORD')\n# \u5730\u5740\nHOSTNAME = os.getenv('MYSQL_HOSTNAME')\n# \u7aef\u53e3\nPORT = os.getenv('MYSQL_PORT')\n# \u6570\u636e\u5e93\u540d\u79f0\nDATABASE = os.getenv('MYSQL_DATABASE_NAME')\n# \u56fa\u5b9a\u683c\u5f0f \u4e0d\u7528\u6539\nDIALECT = 'mysql'\nDRIVER = 'pymysql'\nclass Config:\nDEBUG = False\nTESTING = False\nSECRET_KEY = os.getenv('SECRET_KEY')\nSQLALCHEMY_DATABASE_URI = f\"{DIALECT}+{DRIVER}://{USERNAME}:{PASSWORD}@{HOSTNAME}:{PORT}/{DATABASE}?charset=utf8\"\nSQLALCHEMY_ECHO = True\nclass ProductionConfig(Config):\nDEBUG = False\nSQLALCHEMY_DATABASE_URI = ''\nclass DevelopmentConfig(Config):\nDEBUG = True\nclass TestingConfig(Config):\nTESTING = True\nconfig = {\n'development': DevelopmentConfig,\n'production': ProductionConfig,\n'testing': TestingConfig,\n'default': DevelopmentConfig,\n}\n</code></pre> <p>\u7136\u540e\u6211\u4eec\u5728 <code>.env</code> \u6587\u4ef6\u4e2d\u65b0\u589e\u4e0b\u9762\u7684\u73af\u5883\u53d8\u91cf\uff1a</p> Python<pre><code># ...\nSECRET_KEY=b'#q)\\\\x00\\xd6\\x9f&lt;iBQ\\xd7;,\\xe2E'       # flask\u6269\u5c55\u5bc6\u94a5\nMYSQL_USER_NAME=root                                                            # MySQL\u7528\u6237\nMYSQL_USER_PASSWORD=root                                                    # MySQL\u5bc6\u7801\nMYSQL_HOSTNAME=192.168.56.56                                            # MySQL\u4e3b\u673a\u5730\u5740\nMYSQL_PORT=3306                                                             # MySQL\u7aef\u53e3\u53f7\nMYSQL_DATABASE_NAME=my_db                                               # MySQL\u7684\u6570\u636e\u5e93\u540d\n</code></pre>"},{"location":"3.%20%E8%BF%9E%E6%8E%A5%E6%95%B0%E6%8D%AE%E5%BA%93/#_4","title":"\u521d\u59cb\u5316\u6570\u636e\u5e93\u8fc1\u79fb\u5de5\u5177","text":"<p>\u5728 <code>/app/manage.py</code> \u6587\u4ef6\u4e2d\uff0c\u521d\u59cb\u5316\u6570\u636e\u5e93\u8fc1\u79fb\u5de5\u5177\uff1a</p> Python<pre><code>from flask_migrate import Migrate\n# \u521d\u59cb\u5316\u6570\u636e\u5e93\u8fc1\u79fb\u5de5\u5177\nmigrate = Migrate()\n</code></pre>"},{"location":"3.%20%E8%BF%9E%E6%8E%A5%E6%95%B0%E6%8D%AE%E5%BA%93/#_5","title":"\u4fee\u6539\u5e94\u7528\u521d\u59cb\u5316\u6587\u4ef6","text":"<p>\u63a5\u4e0b\u6765\u6211\u4eec\u4fee\u6539 <code>/app/__init__.py</code> \u6587\u4ef6\uff1a</p> Python<pre><code>import os\nfrom flask import Flask\nfrom .config import config\nfrom .api.models import db\nfrom .api import api_blueprint\nfrom .manage import migrate\ndef create_app(config_name):\n# \u521d\u59cb\u5316 Flask \u9879\u76ee\napp = Flask(__name__)\n# \u52a0\u8f7d\u914d\u7f6e\u9879\napp.config.from_object(config[config_name])\n# \u521d\u59cb\u5316\u6570\u636e\u5e93ORM\ndb.init_app(app)\n# \u521d\u59cb\u5316\u6570\u636e\u5e93ORM\u8fc1\u79fb\u63d2\u4ef6\nmigrate.init_app(app, db)\n# \u6ce8\u518c\u84dd\u56fe\napp.register_blueprint(api_blueprint)\nreturn app\n# \u521d\u59cb\u5316\u9879\u76ee\napp = create_app(os.getenv('FLASK_ENV', 'development'))\n</code></pre> <p>\u73b0\u5728\u8fd8\u7f3a\u5c11\u4e00\u4e2a <code>db</code> \u548c\u4e00\u4e2a <code>api_blueprint</code> \u53d8\u91cf\uff0c\u6211\u4eec\u5148\u628a <code>db</code> \u8865\u4e0a\u3002</p>"},{"location":"3.%20%E8%BF%9E%E6%8E%A5%E6%95%B0%E6%8D%AE%E5%BA%93/#orm","title":"\u521d\u59cb\u5316ORM\u5de5\u5177","text":"<p>\u6211\u4eec\u5728 <code>/app/api/models</code> \u4e0b\u65b0\u5efa\u4e00\u4e2a <code>__init__.py</code> \u6587\u4ef6\uff0c\u5728\u91cc\u9762\u521d\u59cb\u5316 Flask-SQLAlchemy \u6269\u5c55\uff1a</p> Python<pre><code>from flask_sqlalchemy import SQLAlchemy\n# \u521d\u59cb\u5316 Flask-SQLAlchemy\ndb = SQLAlchemy()\n</code></pre>"},{"location":"4.%20%E8%A7%84%E5%88%92%20%26%20%E5%AE%9A%E4%B9%89%20%26%20%E5%88%9B%E5%BB%BA%20%E8%93%9D%E5%9B%BE/","title":"4. \u89c4\u5212 & \u5b9a\u4e49 & \u521b\u5efa \u84dd\u56fe","text":""},{"location":"4.%20%E8%A7%84%E5%88%92%20%26%20%E5%AE%9A%E4%B9%89%20%26%20%E5%88%9B%E5%BB%BA%20%E8%93%9D%E5%9B%BE/#4","title":"4. \u89c4\u5212 &amp; \u5b9a\u4e49 &amp; \u521b\u5efa \u84dd\u56fe","text":""},{"location":"4.%20%E8%A7%84%E5%88%92%20%26%20%E5%AE%9A%E4%B9%89%20%26%20%E5%88%9B%E5%BB%BA%20%E8%93%9D%E5%9B%BE/#api","title":"\u521b\u5efa\u540d\u4e3aapi\u7684\u84dd\u56fe","text":"<p>\u63a5\u4e0b\u6765\u6211\u4eec\u8865\u5145 <code>api_blueprint</code> \u3002 \u5728\u4e0a\u4e00\u8282\u7684\u521d\u59cb\u5316\u4e2d\uff0c\u6211\u4eec\u5199\u4e86\u4e00\u4e2a <code>HelloWorld</code> \u7c7b\u5e76\u6ce8\u518c\u5230 <code>/</code> \u8def\u7531\u4e0a\uff0c\u5728\u5b9e\u9645\u5f00\u53d1\u4e2d\uff0c\u6211\u4eec\u5e76\u4e0d\u4f1a\u8fd9\u4e48\u505a\uff0c\u800c\u662f\u5c06\u4e1a\u52a1\u63a5\u53e3\u62c6\u5206\u6a21\u5757\uff0c\u6bd4\u5982 <code>/api/xxx</code>\uff0c\u6240\u4ee5\u73b0\u5728\u6211\u4eec\u9700\u8981\u521b\u5efa\u4e00\u4e2a <code>api</code> \u84dd\u56fe\u6765\u7edf\u4e00\u7ba1\u7406\uff0c\u5728 <code>/app/api/__init__.py</code> \u6587\u4ef6\u4e2d\u5199\u5165\u4ee5\u4e0b\u4ee3\u7801\uff1a</p> Python<pre><code>from flask import Blueprint\nfrom flask_restful import Api\n# \u65b0\u5efa\u4e00\u4e2a\u84dd\u56fe\napi_blueprint = Blueprint('api', __name__, url_prefix=\"/api\")\n# \u521d\u59cb\u5316\u8fd9\u4e2a\u84dd\u56fe\napi = Api(api_blueprint)\n</code></pre> <p>\u6211\u4eec\u5148\u4f7f\u7528 Flask \u4e2d\u7684 <code>Blueprint</code> \u65b0\u5efa\u4e00\u4e2a\u84dd\u56fe\uff0c\u5c06\u524d\u7f00\u8bbe\u7f6e\u4e3a <code>/api</code>\uff0c\u7136\u540e\u6211\u4eec\u4f7f\u7528 flask_restful \u4e2d\u7684 <code>Api()</code> \u521d\u59cb\u5316\u8fd9\u4e2a\u84dd\u56fe\uff0c\u5047\u8bbe\u6211\u4eec\u5728\u8be5\u6587\u4ef6\u4e2d\u4f7f\u7528 <code>api.add_resource(HelloWorld, '/greet')</code> \u6ce8\u518c\u4e86\u63a5\u53e3\uff0c\u90a3\u4e48\u53ea\u9700\u8981\u901a\u8fc7 <code>/api/greet</code> \u8fdb\u884c\u8c03\u7528\u5373\u53ef\u3002</p>"},{"location":"5.%20%E5%88%9B%E5%BB%BAORM%E6%A8%A1%E5%9E%8B%E5%B9%B6%E6%9B%B4%E6%96%B0%E6%95%B0%E6%8D%AE%E5%BA%93/","title":"5. \u521b\u5efaORM\u6a21\u578b\u5e76\u66f4\u65b0\u6570\u636e\u5e93","text":""},{"location":"5.%20%E5%88%9B%E5%BB%BAORM%E6%A8%A1%E5%9E%8B%E5%B9%B6%E6%9B%B4%E6%96%B0%E6%95%B0%E6%8D%AE%E5%BA%93/#5-orm","title":"5. \u521b\u5efaORM\u6a21\u578b\u5e76\u66f4\u65b0\u6570\u636e\u5e93","text":""},{"location":"5.%20%E5%88%9B%E5%BB%BAORM%E6%A8%A1%E5%9E%8B%E5%B9%B6%E6%9B%B4%E6%96%B0%E6%95%B0%E6%8D%AE%E5%BA%93/#user","title":"\u521b\u5efauser\u6a21\u578b","text":"<p>\u8fd9\u4e00\u8282\u6211\u4eec\u521b\u5efa <code>User</code> \u6a21\u578b\uff0c\u5e76\u4e14\u5229\u7528 ORM \u751f\u6210\u5bf9\u5e94\u7684\u6570\u636e\u5e93\u8868\uff0c\u9996\u5148\u5728 <code>/app/api/models</code> \u4e0b\u65b0\u5efa\u4e00\u4e2a <code>user.py</code>\uff0c\u6211\u4eec\u5728\u8fd9\u4e2a\u6587\u4ef6\u4e2d\u5b9a\u4e49 <code>User</code> \u8868\uff1a</p> Python<pre><code>from ..models import db\nfrom datetime import datetime\nclass UserModel(db.Model):\n\"\"\"\n    \u7528\u6237\u8868\n    \"\"\"\n__tablename__ = 'user'\n# \u4e3b\u952e id\nid = db.Column(db.Integer(), primary_key=True, nullable=False, autoincrement=True, comment='\u4e3b\u952eID')\n# \u7528\u6237\u540d\nusername = db.Column(db.String(40), nullable=False, default='', comment='\u7528\u6237\u59d3\u540d')\n# \u5bc6\u7801\npwd = db.Column(db.String(102), comment='\u5bc6\u7801')\n# salt\nsalt = db.Column(db.String(32), comment='salt')\n# \u521b\u5efa\u65f6\u95f4\ncreated_at = db.Column(db.DateTime(), nullable=False, default=datetime.now, comment='\u521b\u5efa\u65f6\u95f4')\n# \u66f4\u65b0\u65f6\u95f4\nupdated_at = db.Column(db.DateTime(), nullable=False, default=datetime.now, onupdate=datetime.now, comment='\u66f4\u65b0\u65f6\u95f4')\n# \u65b0\u589e\u7528\u6237\ndef add_user(self):\ndb.session.add(self)\ndb.session.commit()\n# \u7528\u6237\u5b57\u5178\ndef dict(self):\nreturn {\n\"id\": self.id,\n\"username\": self.username,\n\"created_at\": self.created_at,\n\"updated_at\": self.updated_at,\n}\n# \u83b7\u53d6\u5bc6\u7801\u548c salt\ndef get_pwd(self):\nreturn {\n\"pwd\": self.pwd,\n\"salt\": self.salt,\n}\n# \u6309 username \u67e5\u627e\u7528\u6237\n@classmethod\ndef find_by_username(cls, username):\nreturn db.session.execute(db.select(cls).filter_by(username=username)).first()\n# \u8fd4\u56de\u6240\u6709\u7528\u6237\n@classmethod\ndef get_all_user(cls):\nreturn db.session.query(cls).all()\n</code></pre> <p>\u6211\u4eec\u5b9a\u4e49\u4e86 <code>User</code> \u8868\u4e2d\u4e00\u4e9b\u5fc5\u8981\u7684\u5b57\u6bb5\u4ee5\u53ca\u4e00\u4e9b\u5e38\u7528\u7684\u65b9\u6cd5\uff0c\u6bd4\u5982\u65b0\u589e\u548c\u67e5\u8be2\u3002\u8fd9\u4e9b\u65b9\u6cd5\u6211\u4eec\u540e\u9762\u4f1a\u7528\u5230\u3002</p>"},{"location":"5.%20%E5%88%9B%E5%BB%BAORM%E6%A8%A1%E5%9E%8B%E5%B9%B6%E6%9B%B4%E6%96%B0%E6%95%B0%E6%8D%AE%E5%BA%93/#orm","title":"\u663e\u5f0f\u5f15\u5165ORM\u6a21\u578b","text":"<p>\u63a5\u4e0b\u6765\u6211\u4eec\u9700\u8981\u5728 <code>/app/__init__.py</code> \u4e2d\u663e\u5f0f\u7684\u5f15\u5165\u8be5\u6a21\u578b\uff1a</p> Python<pre><code># ...\nfrom .manage import migrate\n# \u91cd\u8981: \u6240\u6709\u6570\u636e\u5e93\u6a21\u578b\u90fd\u9700\u8981\u663e\u5f0f\u7684\u5728\u8fd9\u91cc\u5bfc\u5165\nfrom .api.models.user import UserModel\ndef create_app(config_name):\n# ...\n</code></pre>"},{"location":"5.%20%E5%88%9B%E5%BB%BAORM%E6%A8%A1%E5%9E%8B%E5%B9%B6%E6%9B%B4%E6%96%B0%E6%95%B0%E6%8D%AE%E5%BA%93/#_1","title":"\u6267\u884c\u6570\u636e\u5e93\u8fc1\u79fb","text":"<p>\u73b0\u5728\u6211\u4eec\u8981\u5728\u63a7\u5236\u53f0\u6267\u884c\u6570\u636e\u5e93\u8fc1\u79fb\u5de5\u5177\u7684\u540c\u6b65\u547d\u4ee4\uff0c\u6765\u68c0\u9a8c\u6570\u636e\u5e93\u5de5\u5177\u662f\u5426\u53ef\u7528\uff1a</p> Bash<pre><code># \u7b2c\u4e00\u6b21\u521d\u59cb\u5316\u65f6\u4f7f\u7528\n$ flask db init         # \u521b\u5efa\u8fc1\u79fb\u5b58\u50a8\u5e93\n# \u540e\u9762\u6bcf\u6b21\u4fee\u6539\u6570\u636e\u5e93\u5b57\u6bb5\u65f6\u4f7f\u7528\u3002\u5373\u6bcf\u6b21\u6570\u636e\u5e93\u6a21\u578b\u66f4\u6539\u65f6,\u8bf7\u91cd\u590dmigrate\u548cupgrade\u547d\u4ee4\u3002\n$ flask db migrate  # \u751f\u6210\u521d\u59cb\u8fc1\u79fb,\u53ef\u4ee5\u4f7f\u7528-m \"Initial migration.\"\u6765\u589e\u52a0message\n$ flask db upgrade  # \u5c06\u8fc1\u79fb\u811a\u672c\u63cf\u8ff0\u7684\u66f4\u6539\u5e94\u7528\u5230\u60a8\u7684\u6570\u636e\u5e93\n</code></pre> <p>\u6211\u4eec\u672c\u6b21\u9700\u8981\u5b8c\u6574\u7684\u6267\u884c\u8fd9\u4e09\u6761\u547d\u4e86\u3002\u53e6\u5916\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c<code>flask db init</code> \u53ea\u5728\u6211\u4eec\u65b0\u9879\u76ee\u7b2c\u4e00\u6b21\u521d\u59cb\u5316\u6570\u636e\u5e93\u65f6\u4f7f\u7528\uff0c\u540e\u7eed\u6709\u8868\u5b57\u6bb5\u4fee\u6539\u4ee5\u53ca\u65b0\u589e\u8868\u7684\u65f6\u5019\uff0c\u53ea\u9700\u8981\u6267\u884c\u540e\u9762\u4e24\u6761\u547d\u4ee4\u5373\u53ef\u3002\u73b0\u5728\u6211\u4eec\u6253\u5f00\u6570\u636e\u5e93\u5de5\u5177\u67e5\u770b\uff0c\u5e94\u8be5\u5df2\u7ecf\u6709\u4e24\u4e2a\u8868\u4e86\u3002 </p> <p>\u5176\u4e2d <code>user</code> \u8868\u662f\u6211\u4eec\u521a\u521b\u5efa\u7684\u8868\uff0c\u800c <code>alembic_version</code> \u8868\u662f Flask-Migrate \u6269\u5c55\u81ea\u52a8\u521b\u5efa\u7684\uff0c\u6253\u5f00\u8fd9\u4e2a\u8868\uff0c\u91cc\u9762\u6709\u4e14\u53ea\u6709\u4e00\u4e2a\u5b57\u6bb5 <code>version_num</code>\uff0c\u8be5\u5b57\u6bb5\u662f\u8bb0\u5f55\u4f60\u7684\u6570\u636e\u5e93\u66f4\u65b0\u8fc1\u79fb\u7248\u672c\u53f7\u7684\uff0c\u8fd9\u4e2a\u8868\u4e0d\u8981\u968f\u4fbf\u6539\u52a8\uff0c\u8ba9 Flask-Migrate \u81ea\u884c\u7ba1\u7406\u5c31\u597d\u3002</p> <p>\u6ce8\u610f\uff1a<code>flask db init</code>\u8fd9\u4f1a\u5c06\u8fc1\u79fb\u6587\u4ef6\u5939\u6dfb\u52a0\u5230\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f\u4e2d\uff0c\u8be5\u6587\u4ef6\u5939\u7684\u5185\u5bb9\u9700\u8981\u4e0e\u5176\u4ed6\u6e90\u6587\u4ef6\u4e00\u8d77\u6dfb\u52a0\u5230\u7248\u672c\u63a7\u5236\u4e2d\u3002</p>"},{"location":"6.%20%E5%AE%9E%E7%8E%B0%E6%B3%A8%E5%86%8C%E6%8E%A5%E5%8F%A3/","title":"6. \u5b9e\u73b0\u6ce8\u518c\u63a5\u53e3","text":""},{"location":"6.%20%E5%AE%9E%E7%8E%B0%E6%B3%A8%E5%86%8C%E6%8E%A5%E5%8F%A3/#6","title":"6. \u5b9e\u73b0\u6ce8\u518c\u63a5\u53e3","text":""},{"location":"6.%20%E5%AE%9E%E7%8E%B0%E6%B3%A8%E5%86%8C%E6%8E%A5%E5%8F%A3/#register","title":"\u5b9e\u73b0 register \u903b\u8f91","text":"<p>\u63a5\u4e0b\u6765\u6211\u4eec\u5b9e\u73b0\u6ce8\u518c\u63a5\u53e3\uff0c\u9996\u5148\u5728 <code>/app/api/resources</code> \u4e0b\u521b\u5efa <code>register.py</code> \u6587\u4ef6\uff0c\u5f00\u59cb\u5199\u6ce8\u518c\u63a5\u53e3\u7684\u903b\u8f91\uff1a</p> Python<pre><code>import uuid\nfrom flask_restful import Resource, reqparse\nfrom werkzeug.security import generate_password_hash\nfrom ..models.user import UserModel\nclass Register(Resource):\ndef post(self):\n# Step: \u5b9a\u4e49\u53c2\u6570\u89e3\u6790\u5668\nparser = reqparse.RequestParser()\n# \u53c2\u6570\u6821\u9a8c\u5305\u542b `username` \u548c `password` \u4e24\u4e2a\u5b57\u6bb5\n# \u7c7b\u578b\u90fd\u662f `string`\n# \u53d6\u53c2\u6570\u7684\u4f4d\u7f6e\u662f `json`\n# `dest` \u5219\u8868\u793a\u8bbe\u7f6e\u4e86\u53c2\u6570\u7684\u522b\u540d\n# required=True \u4ee3\u8868\u4e3a\u5fc5\u9700\u53c2\u6570\u3002\u5982\u679c\u8bf7\u6c42\u4e2d\u7f3a\u5c11\u8be5\u53c2\u6570\uff0c\u5c06\u4f1a\u8fd4\u56de\u4e00\u4e2a\u9519\u8bef\u54cd\u5e94\u3002\nparser.add_argument('username', type=str, location='json')\nparser.add_argument('password', type=str, dest='pwd', location='json')\n# Step: \u89e3\u6790\u8bf7\u6c42\u53c2\u6570,\u4ece\u63d0\u4f9b\u7684\u8bf7\u6c42\u4e2d\u89e3\u6790\u6240\u6709\u53c2\u6570\uff0c\u5e76\u5c06\u7ed3\u679c\u4f5c\u4e3aNamespace\u8fd4\u56de\ndata = parser.parse_args()\n# \u6309 username \u67e5\u627e\u7528\u6237\nif UserModel.find_by_username(data['username']):\nreturn {\n'success': False,\n'message': \"Repeated username!\",\n'data': None,\n}, 400\nelse: \ntry:\n# \u751f\u6210UUID\u7684\u5341\u516d\u8fdb\u5236\u8868\u793a\u7684\u5b57\u7b26\u4e32\ndata['salt'] = uuid.uuid4().hex\n# \u5c06\u7528\u6237\u7684\u5bc6\u7801\u8fdb\u884c MD5 + Salt \u52a0\u5bc6\ndata['pwd'] = generate_password_hash('{}{}'.format(data['salt'], data['pwd']))\nuser = UserModel(**data)\nuser.addUser()\nreturn {\n'success': True,\n'message': \"Register succeed!\",\n'data': None,\n}, 200\nexcept Exception as e:\nreturn {\n'success': False,\n'message': \"Error: {}\".format(e),\n'data': None,\n}, 500\n</code></pre> <p>\u9996\u5148\u6211\u4eec\u5b9a\u4e49\u4e86\u4e00\u4e2a\u7ee7\u627f\u81ea <code>Resource</code> \u7c7b\u7684 <code>Register</code> \u6d3e\u751f\u7c7b\uff0c\u5728\u7c7b\u91cc\u9762\u6211\u4eec\u5b9a\u4e49\u4e86\u4e00\u4e2a <code>post</code> \u51fd\u6570\uff0c\u7136\u540e\u4f7f\u7528 <code>reqparse</code> \u5b9a\u4e49\u4e86\u63a5\u53e3\u7684\u53c2\u6570\u6821\u9a8c\u5305\u542b <code>username</code> \u548c <code>password</code> \u4e24\u4e2a\u5b57\u6bb5\uff0c\u7c7b\u578b\u90fd\u662f <code>string</code>\uff0c\u53d6\u53c2\u6570\u7684\u4f4d\u7f6e\u662f <code>json</code>\uff0c<code>dest</code> \u5219\u8868\u793a\u8bbe\u7f6e\u4e86\u53c2\u6570\u7684\u522b\u540d\uff0c\u89e3\u6790\u53c2\u6570\u4e4b\u540e\u53ea\u9700\u8981\u7528 <code>pwd</code> \u5373\u53ef\u53d6\u5230\u8bf7\u6c42\u4f20\u6765\u7684 <code>password</code> \u53c2\u6570\u3002</p> <p>\u63a5\u7740\u6211\u4eec\u5224\u65ad\u4e86\u4f20\u8fc7\u6765\u7684\u7528\u6237\u540d\u662f\u5426\u91cd\u590d\uff0c\u5982\u679c\u91cd\u590d\u4e86\u5219\u629b\u51fa\u9519\u8bef\u4fe1\u606f\uff0c\u5982\u679c\u6ca1\u6709\u91cd\u590d\uff0c\u6211\u4eec\u5c06\u7528\u6237\u7684\u5bc6\u7801\u8fdb\u884c MD5 + Salt \u52a0\u5bc6\uff0c\u6700\u540e\u6211\u4eec\u5728\u6570\u636e\u5e93\u91cc\u50a8\u5b58\u52a0\u5bc6\u4e4b\u540e\u7684\u5bc6\u7801\u548c Salt\u3002\u540c\u65f6\u6211\u4eec\u5bf9\u6574\u4e2a\u52a0\u5bc6\u7684\u8fc7\u7a0b\u8fdb\u884c\u9519\u8bef\u6355\u83b7\uff0c\u4ee5\u9632\u7a0b\u5e8f\u6267\u884c\u65f6\u62a5\u9519\u65e0\u6cd5\u901a\u77e5\u5230\u5ba2\u6237\u7aef\u3002</p>"},{"location":"6.%20%E5%AE%9E%E7%8E%B0%E6%B3%A8%E5%86%8C%E6%8E%A5%E5%8F%A3/#_1","title":"\u6ce8\u518c\u63a5\u53e3","text":"<p>\u63a5\u4e0b\u6765\u6211\u4eec\u5728 <code>/app/api/__init__.py</code> \u4e2d\u53bb\u6ce8\u518c\u8fd9\u4e2a\u63a5\u53e3\uff1a</p> Python<pre><code># ...\nfrom .resources.register import Register\n# ...\napi = Api(api_blueprint)\napi.add_resource(Register, '/register')\n</code></pre> <p>Flask \u9ed8\u8ba4\u4f1a\u5728\u5f00\u53d1\u6a21\u5f0f\u4e0b\u5f00\u542f\u70ed\u66f4\u65b0\uff0c\u68c0\u6d4b\u5230\u4f60\u4ee3\u7801\u4fee\u6539\u540e\u5b83\u4f1a\u91cd\u542f\u670d\u52a1\uff0c\u6240\u4ee5\u6211\u4eec\u65e0\u9700\u91cd\u542f\u670d\u52a1\uff0c\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u8c03\u8bd5\u5de5\u5177\u8fdb\u884c\u63a5\u53e3\u6d4b\u8bd5\u3002 </p>"},{"location":"6.%20%E5%AE%9E%E7%8E%B0%E6%B3%A8%E5%86%8C%E6%8E%A5%E5%8F%A3/#_2","title":"\u62bd\u79bb\u5c01\u88c5\u4f18\u5316\u4e1a\u52a1\u903b\u8f91","text":"<p>\u518d\u8fdb\u884c\u4e0b\u4e00\u6b65\u4e4b\u524d\uff0c\u6211\u4eec\u5148\u4f18\u5316\u4e0b\u4ee3\u7801\uff0c\u6211\u4eec\u4e0a\u9762\u6ce8\u518c\u63a5\u53e3\u7684\u4ee3\u7801\u5176\u5b9e\u662f\u6709\u4f18\u5316\u7a7a\u95f4\u7684\uff0c\u53ef\u4ee5\u5c06\u4e0d\u91cd\u8981\u7684\u53c2\u6570\u6821\u9a8c\u4ee5\u53ca\u91cd\u590d\u6027\u7684 Response \u5185\u5bb9\u62bd\u79bb\u5c01\u88c5\u3002 \u6211\u4eec\u5148\u62bd\u79bb\u53c2\u6570\u6821\u9a8c\u90e8\u5206\uff0c\u5728 <code>/app/api/schema</code> \u4e0b\u65b0\u5efa\u4e00\u4e2a <code>register_sha.py</code> \u6587\u4ef6\uff0c\u628a\u53c2\u6570\u6821\u9a8c\u903b\u8f91\u8f6c\u79fb\u5230\u8be5\u6587\u4ef6\u5185\uff1a</p> Python<pre><code>def reg_args_valid(parser):\n# \u53c2\u6570\u6821\u9a8c\u5305\u542b `username` \u548c `password` \u4e24\u4e2a\u5b57\u6bb5\n# \u7c7b\u578b\u90fd\u662f `string`\n# \u53d6\u53c2\u6570\u7684\u4f4d\u7f6e\u662f `json`\n# `dest` \u5219\u8868\u793a\u8bbe\u7f6e\u4e86\u53c2\u6570\u7684\u522b\u540d\n# required=True \u4ee3\u8868\u4e3a\u5fc5\u9700\u53c2\u6570\u3002\u5982\u679c\u8bf7\u6c42\u4e2d\u7f3a\u5c11\u8be5\u53c2\u6570\uff0c\u5c06\u4f1a\u8fd4\u56de\u4e00\u4e2a\u9519\u8bef\u54cd\u5e94\u3002\nparser.add_argument('username', type=str, location='json')\nparser.add_argument('password', type=str, dest='pwd', location='json')\n</code></pre> <p>\u7136\u540e\u6211\u4eec\u5728 <code>/app/api/common</code> \u4e0b\u65b0\u5efa\u4e00\u4e2a <code>utils.py</code> \u6587\u4ef6\uff0c\u5c01\u88c5\u4e00\u4e2a\u516c\u5171\u7684 Response \u65b9\u6cd5\uff1a</p> Python<pre><code># \u516c\u5171 response \u65b9\u6cd5\ndef res(data=None, message='OK', success=True, code=200):\nreturn {\n'success': success,\n'message': message,\n'data': data,\n}, code\n</code></pre> <p>\u6700\u540e\u6211\u4eec\u4fee\u6539\u4e00\u4e0b <code>/app/api/resources/register.py</code> \u6587\u4ef6\uff1a</p> Python<pre><code># ...\nfrom werkzeug.security import generate_password_hash\nfrom ..common.utils import res\nfrom ..models.user import UserModel\nfrom ..schema.register_sha import reg_args_valid\nclass Register(Resource):\ndef post(self):\n# \u5b9a\u4e49\u53c2\u6570\u89e3\u6790\u5668\nparser = reqparse.RequestParser()\nreg_args_valid(parser)\n# \u89e3\u6790\u8bf7\u6c42\u53c2\u6570:\u4ece\u63d0\u4f9b\u7684\u8bf7\u6c42\u4e2d\u89e3\u6790\u6240\u6709\u53c2\u6570\uff0c\u5e76\u5c06\u7ed3\u679c\u4f5c\u4e3aNamespace\u8fd4\u56de\ndata = parser.parse_args()\n# \u6309 username \u67e5\u627e\u7528\u6237\nif UserModel.find_by_username(data['username']):\nreturn res(success=False, message=\"Repeated username!\", code=400)\nelse: \ntry:\n# \u751f\u6210UUID\u7684\u5341\u516d\u8fdb\u5236\u8868\u793a\u7684\u5b57\u7b26\u4e32\ndata['salt'] = uuid.uuid4().hex\n# \u5c06\u7528\u6237\u7684\u5bc6\u7801\u8fdb\u884c MD5 + Salt \u52a0\u5bc6\ndata['pwd'] = generate_password_hash('{}{}'.format(data['salt'], data['pwd']))\nuser = UserModel(**data)\nuser.addUser()\nreturn res(message=\"Register succeed!\")\nexcept Exception as e:\nreturn res(success=False, message=\"Error: {}\".format(e), code=500)\n</code></pre>"},{"location":"7.%20%E5%AE%9E%E7%8E%B0%E7%99%BB%E5%BD%95%E6%8E%A5%E5%8F%A3/","title":"7. \u5b9e\u73b0\u767b\u5f55\u63a5\u53e3","text":""},{"location":"7.%20%E5%AE%9E%E7%8E%B0%E7%99%BB%E5%BD%95%E6%8E%A5%E5%8F%A3/#7","title":"7. \u5b9e\u73b0\u767b\u5f55\u63a5\u53e3","text":""},{"location":"7.%20%E5%AE%9E%E7%8E%B0%E7%99%BB%E5%BD%95%E6%8E%A5%E5%8F%A3/#_1","title":"\u5b89\u88c5\u6a21\u5757","text":"<p>\u73b0\u5728\u6211\u4eec\u6765\u5b9e\u73b0\u767b\u5f55\u63a5\u53e3\uff0c\u5728\u5f00\u59cb\u4e4b\u524d\uff0c\u6211\u4eec\u9700\u8981\u5b89\u88c5 <code>Flask-JWT-Extended</code> \u6269\u5c55\u6765\u5e2e\u52a9\u6211\u4eec\u5b8c\u6210 Token \u7684\u521b\u5efa\u4ee5\u53ca\u6821\u9a8c\u7b49\u5de5\u4f5c\u3002</p> Bash<pre><code>$ poetry add flask-jwt-extended\n</code></pre>"},{"location":"7.%20%E5%AE%9E%E7%8E%B0%E7%99%BB%E5%BD%95%E6%8E%A5%E5%8F%A3/#jwt","title":"\u914d\u7f6eJWT","text":"<p>\u5b89\u88c5\u5b8c\u6210\u540e\u6211\u4eec\u5728 <code>/app/config.py</code> \u4e2d\u6dfb\u52a0\u4ee5\u4e0b\u5185\u5bb9\uff1a</p> Python<pre><code># ...\nfrom datetime import timedelta\n# ...\nclass Config(object):\n# ...\nJWT_SECRET_KEY = os.getenv('JWT_SECRET_KEY')\nJWT_ACCESS_TOKEN_EXPIRES = timedelta(hours=2)\nJWT_REFRESH_TOKEN_EXPIRES = timedelta(days=30)\nJWT_BLOCKLIST_TOKEN_CHECKS = ['access']\n# ...\n</code></pre> <p>\u5728 <code>/.env</code> \u4e2d\u6dfb\u52a0\u73af\u5883\u53d8\u91cf\uff1a</p> Python<pre><code># ...\nJWT_SECRET_KEY=b'#q)\\\\x00\\xd6\\x9f&lt;iBQ\\xd7;,\\xe2E' # jwt\u5bc6\u94a5\n# ...\n</code></pre> <p>\u5728 <code>/app/__init__.py</code> \u4e2d\u521d\u59cb\u5316 JWT \u6269\u5c55\uff1a</p> Python<pre><code># ...\nfrom flask_jwt_extended import JWTManager\n# ...\ndef create_app(config_name):\n# ...\n# \u521d\u59cb\u5316 JWT\njwt = JWTManager(app)\nreturn app\n# ...\n</code></pre>"},{"location":"7.%20%E5%AE%9E%E7%8E%B0%E7%99%BB%E5%BD%95%E6%8E%A5%E5%8F%A3/#login","title":"\u5b9e\u73b0 login \u903b\u8f91","text":"<p>\u521d\u59cb\u5316\u6269\u5c55\u540e\uff0c\u6211\u4eec\u5728 <code>/app/api/resources</code> \u4e0b\u65b0\u5efa <code>login.py</code>\uff0c\u5e76\u5b8c\u6210\u767b\u5f55\u63a5\u53e3\u7684\u903b\u8f91\uff1a</p> Python<pre><code>from flask_restful import Resource, reqparse\nfrom flask_jwt_extended import create_access_token, create_refresh_token\nfrom werkzeug.security import check_password_hash\nfrom ..schema.register_sha import reg_args_valid\nfrom ..models.user import UserModel\nfrom ..common.utils import res\nclass Login(Resource):\ndef post(self):\n# \u521d\u59cb\u5316\u89e3\u6790\u5668\nparser = reqparse.RequestParser()\n# \u6dfb\u52a0\u8bf7\u6c42\u53c2\u6570\u6821\u9a8c(\u56e0\u4e3a\u767b\u5f55\u63a5\u53e3\u4f20\u5165\u7684\u53c2\u6570\u548c\u6ce8\u518c\u63a5\u53e3\u4e00\u81f4\uff0c\u6240\u4ee5\u76f4\u63a5\u5f15\u5165\u6ce8\u518c\u63a5\u53e3\u7684\u6821\u9a8c\u51fd\u6570)\nreg_args_valid(parser)\ndata = parser.parse_args()\nusername = data['username']\nuser_tuple = UserModel.find_by_username(username)\nif user_tuple:  # \u5df2\u6ce8\u518c\uff0c\u8fdb\u884c\u5bc6\u7801\u6821\u9a8c\ntry:\n(user,) = user_tuple\npwd, salt  = user.get_pwd().get('pwd'), user.get_pwd().get('salt')\n# \u5b89\u5168\u5730\u68c0\u67e5\u7ed9\u5b9a\u7684\u5b58\u50a8\u5bc6\u7801\u54c8\u5e0c\u503c\uff0c\u8be5\u54c8\u5e0c\u503c\u662f\u4e4b\u524d\u4f7f\u7528\nvalid = check_password_hash(pwd, '{}{}'.format(salt, data['pwd']))\nif valid:  # \u6821\u9a8c\u901a\u8fc7\n# \u751f\u62102\u4e2atoken \nresponse_data = generate_token(username)\nreturn res(response_data)\nelse:\nreturn res(success=False, message='Invalid password!', code=401)\nexcept Exception as e:\nreturn res(success=False, message='Error: {}'.format(e), code=500)\nelse:  # \u6ca1\u6ce8\u518c\u5219\u629b\u51fa\u9519\u8bef\nreturn res(success=False, message='Unregistered username!', code=400)\n# \u751f\u6210token\ndef generate_token(uid):\n# \u521b\u5efa\u4e00\u4e2a\u65b0\u7684accessToken\n# \u7528\u6765\u9274\u6743,\u6709\u6548\u671f2\u5c0f\u65f6(\u5728config.py\u4e2d\u914d\u7f6e\u7684)\naccess_token = create_access_token(identity=uid)\n# \u521b\u5efa\u4e00\u4e2a\u65b0\u7684refreshToken\n# \u4e3a\u907f\u514d\u7528\u6237\u9891\u7e41\u7684\u91cd\u65b0\u767b\u5f55,\u5f53accessToken\u8fc7\u671f\u540e\u4f7f\u7528refreshToken\u6765\u6362\u53d6\u65b0\u7684accessToken,refreshToken\u670930\u5929\u7684\u6709\u6548\u671f\nrefresh_token = create_refresh_token(identity=uid)\nreturn {\n'accessToken': 'Bearer ' + access_token,\n'refreshToken': 'Bearer ' + refresh_token,\n}\n</code></pre> <p>\u540c\u6837\u7684\uff0c\u6211\u4eec\u65b0\u5efa\u4e86\u4e00\u4e2a <code>Login</code> \u7c7b\uff0c\u5e76\u4e14\u5b9a\u4e49\u4e86\u4e00\u4e2a <code>post</code> \u51fd\u6570\u8868\u660e\u8be5\u63a5\u53e3\u662f POST \u8bf7\u6c42\u3002\u56e0\u4e3a\u767b\u5f55\u63a5\u53e3\u4f20\u5165\u7684\u53c2\u6570\u548c\u6ce8\u518c\u63a5\u53e3\u4e00\u81f4\uff0c\u6240\u4ee5\u76f4\u63a5\u5f15\u5165\u6ce8\u518c\u63a5\u53e3\u7684\u6821\u9a8c\u51fd\u6570\u3002\u89e3\u6790\u5b8c\u53c2\u6570\u540e\uff0c\u5224\u65ad\u8be5\u7528\u6237\u662f\u5426\u5df2\u7ecf\u6ce8\u518c\uff0c\u5982\u679c\u6ca1\u6ce8\u518c\u5219\u629b\u51fa\u9519\u8bef\uff0c\u5982\u679c\u6ce8\u518c\u4e86\u5219\u8fdb\u884c\u5bc6\u7801\u6821\u9a8c\uff0c\u6821\u9a8c\u901a\u8fc7\u4e86\u5c31\u4f7f\u7528\u6269\u5c55\u63d0\u4f9b\u7684\u51fd\u6570\u65b0\u5efa\u4e24\u4e2a Token\uff0c\u5176\u4e2d <code>access_token</code> \u662f\u7528\u6765\u9274\u6743\u7684\uff0c\u6709\u6548\u671f 2 \u5c0f\u65f6\uff08\u5728 <code>config.py</code> \u4e2d\u914d\u7f6e\u7684\uff09\uff0c\u800c\u4e3a\u4e86\u907f\u514d\u7528\u6237\u9700\u8981\u9891\u7e41\u7684\u91cd\u65b0\u767b\u5f55\uff0c\u518d\u751f\u6210\u4e00\u4e2a<code>refresh_token</code>\uff0c\u5f53<code>access_token</code> \u8fc7\u671f\u540e\u4f7f\u7528 <code>refresh_token</code> \u6765\u6362\u53d6\u65b0\u7684 <code>access_token</code>\uff0c\u5f53\u7136\uff0c<code>refresh_token</code> \u4e5f\u6709 30 \u5929\u7684\u6709\u6548\u671f\u3002 \u63a5\u4e0b\u6765\u6211\u4eec\u518d\u5199\u4e00\u4e0b\u6362\u53d6 Token \u7684\u63a5\u53e3\uff1a</p> Python<pre><code>from flask_restful import Resource, reqparse\nfrom flask_jwt_extended import create_access_token, create_refresh_token, jwt_required, get_jwt_identity\n# ...\nclass Login(Resource):\ndef post(self):\n# ...\n# \u4f7f\u7528@jwt_required()\u88c5\u9970\u5668\u5bf9\u8bbf\u95ee\u8fdb\u884c\u9a8c\u8bc1,\u9ed8\u8ba4\u662f\u53ea\u6821\u9a8caccessToken,refresh=True\u4ee3\u8868\u7528\u6709\u6548\u7684refreshToken\u4e5f\u53ef\u4ee5\u901a\u8fc7\u6821\u9a8c\n@jwt_required(refresh=True)\ndef get(self):\n# access_token\u8fc7\u671f\u540e,\u9700\u8981\u7528refresh_token\u6765\u6362\u53d6\u65b0\u7684token\n# \u4ece\u5f53\u524d\u8bf7\u6c42\u4e2d\u63d0\u53d6JWT\u4e2d\u7684\u7528\u6237\u8eab\u4efd\u4fe1\u606f\u3002\u5373\u4ecerefresh_token\u4e2d\u53d6\u51fa\u7528\u6237\u4fe1\u606f\ncurrent_username = get_jwt_identity()\n# \u518d\u751f\u6210\u65b0\u7684 token\naccess_token = create_access_token(identity=current_username)\nreturn res(data={'accessToken': 'Bearer ' + access_token})\n# \u751f\u6210token\ndef generate_token(uid):\n# \u521b\u5efa\u4e00\u4e2a\u65b0\u7684accessToken\n# \u7528\u6765\u9274\u6743,\u6709\u6548\u671f2\u5c0f\u65f6(\u5728config.py\u4e2d\u914d\u7f6e\u7684)\naccess_token = create_access_token(identity=uid)\n# \u521b\u5efa\u4e00\u4e2a\u65b0\u7684refreshToken\n# \u4e3a\u907f\u514d\u7528\u6237\u9891\u7e41\u7684\u91cd\u65b0\u767b\u5f55,\u5f53accessToken\u8fc7\u671f\u540e\u4f7f\u7528refreshToken\u6765\u6362\u53d6\u65b0\u7684accessToken,refreshToken\u670930\u5929\u7684\u6709\u6548\u671f\nrefresh_token = create_refresh_token(identity=uid)\nreturn {\n'accessToken': 'Bearer ' + access_token,\n'refreshToken': 'Bearer ' + refresh_token,\n}\n</code></pre> <p>\u6211\u4eec\u76f4\u63a5\u5728 <code>Login</code> \u7c7b\u4e2d\u5728\u58f0\u660e\u4e00\u4e2a <code>get</code> \u51fd\u6570\uff0c\u7136\u540e\u52a0\u4e0a <code>@jwt_required</code> \u88c5\u9970\u5668\uff0c\u5f53\u52a0\u4e0a\u8be5\u88c5\u9970\u5668\u65f6\uff0cJWT \u6269\u5c55\u4f1a\u4e3a\u6211\u4eec\u81ea\u52a8\u5728\u8c03\u7528\u6b64\u63a5\u53e3\u65f6\u505a Token \u6821\u9a8c\uff0c\u5b83\u9ed8\u8ba4\u662f\u53ea\u6821\u9a8c <code>access_token</code> \u7684\uff0c\u5728\u62ec\u53f7\u5185\u4f20\u5165 <code>refresh=True</code> \u5219\u8868\u793a\u7528\u6709\u6548\u7684 <code>refreshToken</code> \u4e5f\u53ef\u4ee5\u901a\u8fc7\u6821\u9a8c\u3002 </p>"},{"location":"7.%20%E5%AE%9E%E7%8E%B0%E7%99%BB%E5%BD%95%E6%8E%A5%E5%8F%A3/#_2","title":"\u6ce8\u518c\u63a5\u53e3","text":"<p>\u63a5\u4e0b\u6765\u6211\u4eec\u5728 <code>/app/api/__init__.py</code> \u4e2d\u6ce8\u518c\u8be5\u63a5\u53e3\uff1a</p> Python<pre><code># ...\nfrom .resources.register import Register\nfrom .resources.login import Login\n# ...\napi.add_resource(Register, '/register')\napi.add_resource(Login, '/login', '/refreshToken')\n</code></pre>"},{"location":"8.%20%E5%AE%9E%E7%8E%B0%E7%99%BB%E5%87%BA%E6%8E%A5%E5%8F%A3/","title":"8. \u5b9e\u73b0\u767b\u51fa\u63a5\u53e3","text":""},{"location":"8.%20%E5%AE%9E%E7%8E%B0%E7%99%BB%E5%87%BA%E6%8E%A5%E5%8F%A3/#8","title":"8. \u5b9e\u73b0\u767b\u51fa\u63a5\u53e3","text":""},{"location":"8.%20%E5%AE%9E%E7%8E%B0%E7%99%BB%E5%87%BA%E6%8E%A5%E5%8F%A3/#revoked_tokens","title":"\u521b\u5efarevoked_tokens\u6a21\u578b","text":"<p>\u5728\u7528\u6237\u9000\u51fa\u767b\u5f55\u540e\uff0c\u6211\u4eec\u8981\u9500\u6bc1 Token\uff0c\u63a5\u4e0b\u6765\u6211\u4eec\u6765\u5b9e\u73b0\u8fd9\u4e2a\u63a5\u53e3\u3002\u9996\u5148\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u8868\u6765\u5b58\u653e\u5df2\u7ecf\u9500\u6bc1\u7684 Token\uff0c\u5728 <code>/app/api/models</code> \u4e0b\u65b0\u5efa <code>revoked_token.py</code> \u6587\u4ef6\uff1a</p> Python<pre><code>from ..models import db\nclass RevokedTokenModel(db.Model):\n\"\"\"\n        \u5df2\u8fc7\u671f\u7684token\u8868\n    \"\"\"\n__tablename__ = 'revoked_tokens'\n# \u4e3b\u952e id\nid = db.Column(db.Integer, primary_key=True)\n# jwt \u552f\u4e00\u6807\u8bc6\njti = db.Column(db.String(120))\n# token \u52a0\u9ed1\ndef add(self):\ndb.session.add(self)\ndb.session.commit()\n# \u67e5\u8be2\u662f\u5426\u662f\u52a0\u9ed1\u7684 token\n@classmethod\ndef is_jti_blacklisted(cls, jti):\nquery = cls.query.filter_by(jti=jti).first()\nreturn bool(query)\n</code></pre> <p>\u6211\u4eec\u521b\u5efa\u4e00\u4e2a <code>revoked_tokens</code> \u8868\uff0c\u7528\u6765\u5b58\u653e\u5df2\u7ecf\u9500\u6bc1\u7684 Token\uff0c\u5e76\u4e14\u5b9a\u4e49\u4e00\u4e2a\u67e5\u8be2\u7684\u65b9\u6cd5\uff0c\u7528\u6765\u67e5\u8be2 Token \u662f\u5426\u5df2\u9500\u6bc1\u3002 </p>"},{"location":"8.%20%E5%AE%9E%E7%8E%B0%E7%99%BB%E5%87%BA%E6%8E%A5%E5%8F%A3/#logout","title":"\u5b9e\u73b0 logout \u903b\u8f91","text":"<p>\u7136\u540e\u6211\u4eec\u5728 <code>/app/api/resources</code> \u4e0b\u65b0\u5efa <code>logout.py</code> \u5199\u5165\u767b\u51fa\u63a5\u53e3\u903b\u8f91\uff1a</p> Python<pre><code>from flask_restful import Resource\nfrom flask_jwt_extended import jwt_required, get_jwt\nfrom ..models.revoked_token import RevokedTokenModel\nfrom ..common.utils import res\nclass Logout(Resource):\n# \u4f7f\u7528@jwt_required()\u88c5\u9970\u5668\u5bf9\u8bbf\u95ee\u8fdb\u884c\u9a8c\u8bc1,\u9ed8\u8ba4\u662f\u53ea\u6821\u9a8caccessToken\n@jwt_required()\ndef post(self):\n# \u83b7\u53d6\u5230 Token \u4e2d\u7684\u552f\u4e00\u6807\u8bc6 `jti`\njti = get_jwt()['jti']\ntry:\n# \u7528\u6237\u9000\u51fa\u7cfb\u7edf\u65f6,\u5c06 token \u52a0\u5165\u9ed1\u540d\u5355\nrevoked_token = RevokedTokenModel(jti=jti)\nrevoked_token.add()\nreturn res()\nexcept:\nreturn res(success=False, message='\u670d\u52a1\u5668\u7e41\u5fd9\uff01', code=500)\n</code></pre> <p>\u5728\u7528\u6237\u9000\u51fa\u767b\u5f55\u65f6\uff0c\u6211\u4eec\u5148\u83b7\u53d6\u5230 Token \u4e2d\u7684\u552f\u4e00\u6807\u8bc6 <code>jti</code> \u7136\u540e\u5c06\u5b83\u52a0\u5165\u9500\u6bc1 Token \u7684\u8868\u4e2d\u3002 </p>"},{"location":"8.%20%E5%AE%9E%E7%8E%B0%E7%99%BB%E5%87%BA%E6%8E%A5%E5%8F%A3/#_1","title":"\u6ce8\u518c\u63a5\u53e3","text":"<p>\u73b0\u5728\u6211\u4eec\u5728 <code>/app/api/__init__.py</code> \u53bb\u6ce8\u518c\u8be5\u63a5\u53e3\uff1a</p> Python<pre><code># ...\nfrom .resources.logout import Logout\n# ...\napi.add_resource(Logout, '/logout',)\n</code></pre>"},{"location":"8.%20%E5%AE%9E%E7%8E%B0%E7%99%BB%E5%87%BA%E6%8E%A5%E5%8F%A3/#orm","title":"\u663e\u5f0f\u5f15\u5165ORM\u6a21\u578b &amp; \u7f16\u5199\u94a9\u5b50\u51fd\u6570","text":"<p>\u63a5\u4e0b\u6765\u6211\u4eec\u9700\u8981\u6ce8\u518c\u4e00\u4e2a JWT \u6269\u5c55\u63d0\u4f9b\u7684\u94a9\u5b50\u51fd\u6570\uff0c\u7528\u6765\u6821\u9a8c Token \u662f\u5426\u5728\u9500\u6bc1\u5217\u8868\u4e2d\u3002\u5728 <code>/app/__init__.py</code> \u4e2d\u6dfb\u52a0\u4ee5\u4e0b\u5185\u5bb9\uff1a</p> Python<pre><code># ...\n# \u91cd\u8981: \u6240\u6709\u6570\u636e\u5e93\u6a21\u578b\u90fd\u9700\u8981\u663e\u5f0f\u7684\u5728\u8fd9\u91cc\u5bfc\u5165\nfrom .api.models.user import UserModel\nfrom .api.models.revoked_token import RevokedTokenModel\ndef create_app(config_name):\n# ...\n# \u521d\u59cb\u5316 JWT\njwt = JWTManager(app)\n# \u6ce8\u518c JWT \u94a9\u5b50\nregister_jwt_hooks(jwt)\nreturn app\ndef register_jwt_hooks(jwt):\n\"\"\"\u6ce8\u518c JWT \u94a9\u5b50,\u7528\u4e8e\u68c0\u67e5 token \u662f\u5426\u5728\u9ed1\u540d\u5355\u4e2d\u3002\n    \u5f53\u7528\u6237\u5728\u8c03\u7528\u6211\u4eec\u9700\u8981\u9274\u6743\u7684\u63a5\u53e3( @jwt_required )\u65f6\uff0cJWT \u6269\u5c55\u8fd8\u4f1a\u5e2e\u6211\u4eec\u6821\u9a8c\u662f\u5426\u662f\u5df2\u7ecf\u9500\u6bc1\u7684 Token\u3002\n    \"\"\"\n@jwt.token_in_blocklist_loader\ndef check_if_token_in_blacklist(jwt_header, decrypted_token):\njti = decrypted_token['jti']\nreturn RevokedTokenModel.is_jti_blacklisted(jti)\n# ...\n</code></pre> <p>\u81f3\u6b64\uff0c\u5f53\u7528\u6237\u5728\u8c03\u7528\u6211\u4eec\u9700\u8981\u9274\u6743\u7684\u63a5\u53e3\u65f6\uff0cJWT \u6269\u5c55\u8fd8\u4f1a\u5e2e\u6211\u4eec\u6821\u9a8c\u662f\u5426\u662f\u5df2\u7ecf\u9500\u6bc1\u7684 Token\u3002</p>"},{"location":"8.%20%E5%AE%9E%E7%8E%B0%E7%99%BB%E5%87%BA%E6%8E%A5%E5%8F%A3/#_2","title":"\u6267\u884c\u6570\u636e\u5e93\u8fc1\u79fb","text":"<p>\u7531\u4e8e\u6211\u4eec\u521a\u624d\u65b0\u589e\u4e86\u4e00\u5f20\u8868\uff0c\u6240\u4ee5\u9700\u8981\u6267\u884c\u4e0b\u6570\u636e\u5e93\u8fc1\u79fb\u6269\u5c55\u7684\u66f4\u65b0\u547d\u4ee4\u518d\u91cd\u542f\u670d\u52a1\u3002</p> Bash<pre><code>$ flask db migrate\n$ flask db upgrade\n</code></pre>"},{"location":"9.%20%E5%AE%9E%E7%8E%B0%E8%8E%B7%E5%8F%96%E7%94%A8%E6%88%B7%E5%88%97%E8%A1%A8%E6%8E%A5%E5%8F%A3/","title":"9. \u5b9e\u73b0\u83b7\u53d6\u7528\u6237\u5217\u8868\u63a5\u53e3","text":""},{"location":"9.%20%E5%AE%9E%E7%8E%B0%E8%8E%B7%E5%8F%96%E7%94%A8%E6%88%B7%E5%88%97%E8%A1%A8%E6%8E%A5%E5%8F%A3/#9","title":"9. \u5b9e\u73b0\u83b7\u53d6\u7528\u6237\u5217\u8868\u63a5\u53e3","text":""},{"location":"9.%20%E5%AE%9E%E7%8E%B0%E8%8E%B7%E5%8F%96%E7%94%A8%E6%88%B7%E5%88%97%E8%A1%A8%E6%8E%A5%E5%8F%A3/#list-user","title":"\u5b9e\u73b0 list user \u903b\u8f91","text":"<p>\u6700\u540e\u6211\u4eec\u5b9e\u73b0\u4e00\u4e2a\u83b7\u53d6\u7528\u6237\u5217\u8868\u7684\u63a5\u53e3\uff0c\u521a\u597d\u53ef\u4ee5\u6d4b\u8bd5\u6211\u4eec\u7684\u9274\u6743\u903b\u8f91\u662f\u5426\u90fd\u5b9e\u73b0\u4e86\uff0c\u5728 <code>/app/api/resources</code> \u4e0b\u65b0\u5efa <code>user.py</code> \u6587\u4ef6\uff1a</p> Python<pre><code>from flask_restful import Resource\nfrom flask_jwt_extended import jwt_required\nfrom ..models.user import UserModel\nfrom ..common.utils import res\nclass UserService(Resource):\n@jwt_required()  # \u8868\u793a\u8be5\u63a5\u53e3\u9700\u8981\u9274\u6743\ndef get(self):\nuser_list = UserModel.get_all_user()\nresult = []\nfor user in user_list:\nresult.append(user.user_dict())\nreturn res(data=result)\n</code></pre> <p>\u6211\u4eec\u5b9a\u4e49\u4e86\u4e00\u4e2a <code>UserService</code> \u7c7b\uff0c\u5728\u7c7b\u4e2d\u5b9a\u4e49\u4e86\u4e00\u4e2a <code>get</code> \u51fd\u6570\uff0c\u5e76\u4e14\u6dfb\u52a0\u4e86 <code>@jwt_required()</code> \u88c5\u9970\u5668\uff0c\u8868\u793a\u8be5\u63a5\u53e3\u9700\u8981\u9274\u6743\uff0c\u8c03\u7528\u8be5\u63a5\u53e3\u8fd4\u56de <code>user</code> \u8868\u4e2d\u6240\u6709\u7684\u7528\u6237\u3002 </p>"},{"location":"9.%20%E5%AE%9E%E7%8E%B0%E8%8E%B7%E5%8F%96%E7%94%A8%E6%88%B7%E5%88%97%E8%A1%A8%E6%8E%A5%E5%8F%A3/#_1","title":"\u6ce8\u518c\u63a5\u53e3","text":"<p>\u5728 <code>/app/api/__init__.py</code> \u4e2d\u6ce8\u518c\u8be5\u63a5\u53e3\uff1a</p> Python<pre><code># ...\nfrom .resources.user import UserService\n# ...\napi.add_resource(UserService, '/getUserList')\n</code></pre>"},{"location":"9.%20%E5%AE%9E%E7%8E%B0%E8%8E%B7%E5%8F%96%E7%94%A8%E6%88%B7%E5%88%97%E8%A1%A8%E6%8E%A5%E5%8F%A3/#datetime","title":"\u589e\u52a0\u5904\u7406datetime\u6570\u636e\u7684\u65b9\u6cd5","text":"<p>\u6211\u4eec\u7684 <code>user.user_dict()</code> \u65b9\u6cd5\u4e2d\uff0c\u8fd4\u56de\u4e86\u4e24\u4e2a\u65f6\u95f4\u5b57\u6bb5\uff0c\u56e0\u4e3a Python \u4e2d <code>datetime</code> \u683c\u5f0f\u4e0d\u80fd\u76f4\u63a5\u653e\u5728 JSON \u4e2d\u8fd4\u56de\uff0c\u6240\u4ee5\u73b0\u5728\u6211\u4eec\u9700\u8981\u65b0\u5199\u4e00\u4e2a\u5c06 <code>datetime</code> \u8f6c\u6362\u683c\u5f0f\u7684\u65b9\u6cd5\uff0c\u5728 <code>/app/api/common/utils.py</code> \u4e2d\u65b0\u589e\uff1a</p> Python<pre><code># \u516c\u5171 response \u65b9\u6cd5\ndef res(data=None, message='Ok', success=True, code=200):\n# ...\n# datetime \u8f6c\u6362\u683c\u5f0f\ndef format_datetime_to_json(datetime, format='%Y-%m-%d %H:%M:%S'):\nreturn datetime.strftime(format)\n</code></pre> <p>\u4fee\u6539 <code>/app/api/models/user.py</code> \u4e2d <code>dict()</code> \u51fd\u6570\uff1a</p> Python<pre><code>#...\nfrom ..common.utils import format_datetime_to_json\nclass UserModel(db.Model):\n\"\"\"\n    \u7528\u6237\u8868\n    \"\"\"\n# ...\n# \u7528\u6237\u5b57\u5178\ndef user_dict(self):\nreturn {\n\"id\": self.id,\n\"username\": self.username,\n\"created_at\": format_datetime_to_json(self.created_at),\n\"updated_at\": format_datetime_to_json(self.updated_at),\n}\n# ...\n</code></pre>"}]}